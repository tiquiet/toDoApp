basePath: /
definitions:
  handler.errorResponse:
    properties:
      message:
        type: string
    type: object
  handler.getAllItemsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/to_do.TodoItem'
        type: array
    type: object
  handler.getAllListsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/to_do.TodoList'
        type: array
    type: object
  handler.signInInput:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  handler.statusResponse:
    properties:
      status:
        type: string
    type: object
  to_do.CreateListItem:
    properties:
      description:
        type: string
      title:
        type: string
    required:
    - title
    type: object
  to_do.CreateTodoItem:
    properties:
      description:
        type: string
      done:
        type: boolean
      title:
        type: string
    type: object
  to_do.TodoItem:
    properties:
      description:
        type: string
      done:
        type: boolean
      id:
        type: integer
      title:
        type: string
    type: object
  to_do.TodoList:
    properties:
      description:
        type: string
      id:
        type: integer
      title:
        type: string
    required:
    - title
    type: object
  to_do.User:
    properties:
      name:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - name
    - password
    - username
    type: object
host: localhost:8000
info:
  contact: {}
  description: API Server for TodoList Application
  title: Todo App API
  version: "1.0"
paths:
  /api/items/{id}:
    delete:
      consumes:
      - application/json
      description: delete item by id
      operationId: delete-item
      parameters:
      - description: item info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/to_do.CreateTodoItem'
      - description: item id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.statusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: delete item
      tags:
      - item
    get:
      consumes:
      - application/json
      description: get item by id
      operationId: get-item
      parameters:
      - description: item id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/to_do.TodoItem'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: get item
      tags:
      - item
    put:
      consumes:
      - application/json
      description: update item by id
      operationId: update-item
      parameters:
      - description: item info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/to_do.CreateTodoItem'
      - description: item id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.statusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: update item
      tags:
      - item
  /api/lists:
    get:
      consumes:
      - application/json
      description: get all lists
      operationId: get-all-lists
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.getAllListsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: get all lists
      tags:
      - list
    post:
      consumes:
      - application/json
      description: create list
      operationId: create-list
      parameters:
      - description: list info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/to_do.CreateListItem'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: create list
      tags:
      - list
  /api/lists/{id}:
    delete:
      consumes:
      - application/json
      description: delete list by id
      operationId: delete-list
      parameters:
      - description: list id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.statusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: delete list
      tags:
      - list
    get:
      consumes:
      - application/json
      description: get list by id
      operationId: get-list
      parameters:
      - description: list id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/to_do.TodoList'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: get list
      tags:
      - list
    put:
      consumes:
      - application/json
      description: update list by id
      operationId: update-list
      parameters:
      - description: new list info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/to_do.CreateListItem'
      - description: list id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.statusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: update list
      tags:
      - list
  /api/lists/{id}/items:
    get:
      consumes:
      - application/json
      description: get all items
      operationId: get-all-items
      parameters:
      - description: list id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.getAllItemsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: get all items
      tags:
      - item
    post:
      consumes:
      - application/json
      description: create item
      operationId: create-item
      parameters:
      - description: item info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/to_do.CreateTodoItem'
      - description: list id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: create item
      tags:
      - item
  /auth/sign-in:
    post:
      consumes:
      - application/json
      description: login
      operationId: login
      parameters:
      - description: credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handler.signInInput'
      produces:
      - application/json
      responses:
        "200":
          description: token
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: SignIn
      tags:
      - auth
  /auth/sign-up:
    post:
      consumes:
      - application/json
      description: create account
      operationId: create-account
      parameters:
      - description: account info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/to_do.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: SignUp
      tags:
      - auth
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
